<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Microservices on Yining&#39;s Blog</title>
    <link>https://yningg.github.io/Blogs/tags/microservices/</link>
    <description>Recent content in Microservices on Yining&#39;s Blog</description>
    <image>
      <title>Yining&#39;s Blog</title>
      <url>https://github.com/Yningg/Blogs/tree/master/static/apple-touch-icon.png</url>
      <link>https://github.com/Yningg/Blogs/tree/master/static/apple-touch-icon.png</link>
    </image>
    <generator>Hugo -- 0.147.4</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Jan 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://yningg.github.io/Blogs/tags/microservices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Avoid Tight Coupling of Tests to Implementation Details</title>
      <link>https://yningg.github.io/Blogs/posts/microservice-testing/</link>
      <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://yningg.github.io/Blogs/posts/microservice-testing/</guid>
      <description>&lt;p&gt;Building backend systems today will likely involve building many small, independent services that communicate and coordinate with one another to form a distributed system. While there are many resources available discussing the pros and cons of microservices, the architecture, and when it is appropriate to use, I want to focus on the functional testing of microservices and how it differs from traditional approaches.&lt;/p&gt;
&lt;p&gt;In my experience, the &amp;ldquo;best testing practices&amp;rdquo; have evolved with the introduction of microservices, and traditional &lt;em&gt;testing pyramids&lt;/em&gt; may not be the most effective or even potentially harmful in this context. In my work on various projects and companies, including the development of new digital banks and the migration of older systems to microservices as they scale, I have often encountered disagreements about the most appropriate testing strategies for microservices.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
